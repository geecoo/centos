#!/usr/bin/bash


# 流程引导交互
bootstrap_interactive() {
    local iinput
    local argv_count
    local search_arr

    while true
    do
        read -p "Please enter command > "
        iinput="$REPLY" 

        params_filter "$iinput"

        # 分析用户输入的东西

        arr=($(split_command "$iinput"))
        argv_count=${#arr[@]}

        if [ "$argv_count" -eq 1 ]; then
            search_command "${iinput}" 
        else
            multi_command  "${iinput}"

            # 调用执行脚本
            invoker
        fi
        
    done

}

split_command() {
    local iinput="$1"
    iinput=${iinput//,/  }
    iinput=${iinput//:/  }
    echo "$iinput"
}

search_command() {
    local iinput="$1"
    local cnt=0

    search_arr=($(finder_src ${iinput}))

    if [ ! "$search_arr" ]; then
        echo -ne "No found script ($1)."
        return 1
    fi

    if [ "$search_arr" -a "${#search_arr[@]}" -gt 0 ]; then

        for i in ${search_arr[@]}  
        do  
            cnt=$((cnt+1))
            echo "$cnt: $i"  
        done 

        read -p "Please choice number > "

        params_filter "$REPLY"

        if [[ "$REPLY" && ${search_arr[$(($REPLY-1))]} ]]; then
            echo "Start execute the script: ${search_arr[$(($REPLY-1))]}"
            #time . ${search_arr[$(($REPLY-1))]}
            echo "Finished execute the script: ${search_arr[$(($REPLY-1))]}"
        else
            echo "Please enter the correct script number..."
        fi
    fi

    return 0
}

multi_command() {
    local iinput="$1"
    local arr

    arr=($(split_command "$iinput"))

    COO_MODULE="${arr[0]}"
    COO_DO="${arr[1]}"
    COO_INVOKE="${arr[2]}"

    echo "模块: $COO_MODULE"
    echo "实体: $COO_DO"
    echo "方法: $COO_INVOKE"
}

